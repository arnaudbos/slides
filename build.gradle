group 'org.ilaborie.slides'
version '1.0-SNAPSHOT'

buildscript {
    ext{
        kotlinVersion = '1.2.41'
        serializationVersion = '0.4.2'
        feignVersion = '9.6.0'
        loggingVersion = '1.5.4'
        logbackVersion = '1.3.0-alpha4'
    }

    repositories {
        mavenLocal()
        google()
        jcenter()
        mavenCentral()
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlinx:kotlinx-gradle-serialization-plugin:$serializationVersion"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'

repositories {
    mavenLocal()
    google()
    jcenter()
    mavenCentral()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serializationVersion"
    compile 'org.jsoup:jsoup:1.10.3'
    compile "io.github.microutils:kotlin-logging:$loggingVersion"
    runtime "ch.qos.logback:logback-classic:$logbackVersion"
    compile "io.github.openfeign:feign-core:$feignVersion"
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/slides'
    main.resources.srcDirs += 'src/main/slides-resources'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

// Custom builds

//task cssIsAwesome(type: JavaExec) {
//    classpath sourceSets.main.runtimeClasspath
//    main = "css_awesome.MainKt"
//}

//task kotlinHandsOn(type: JavaExec) {
//    classpath sourceSets.main.runtimeClasspath
//    main = "kotlin_hands_on.sunnyTech2018Kt"
//}

//task kotlinBbl(type: JavaExec) {
//    classpath sourceSets.main.runtimeClasspath
//    main = "kotlin_bbl.MainKt"
//}

//task deepDiveKotlin(type: JavaExec) {
//    classpath sourceSets.main.runtimeClasspath
//    main = "deep_dive_kotlin.DevoxxFr2018Kt"
//}

task jsFunctional(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "js_functional.Js_functionalKt"
}

task demo(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "demo.DemoKt"
}
